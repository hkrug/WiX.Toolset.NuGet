<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
    <metadata minClientVersion="2.7">
        <id>WiX.Toolset</id>
        <version>3.10.2.2516</version>
        <title>WiX Toolset (unofficial)</title>
        <summary>Windows Installer XML (WiX Toolset) binaries for compiling setup projects.</summary>
        <description>This package contains the binaries needed to compile Windows Installer XML (WiX) setup projects. 
        Just add this NuGet package to your WiX setup projects and you're done (no setup required on build servers etc.). 
        Note that you still need to install WiX Toolset in Visual Studio to get the editor experience.

        File issues with the NuGet package at https://github.com/hkrug/WiX.Toolset.NuGet
        </description>
        <authors>Rob Mensching,Bob Arnson</authors>
        <owners>hkrug</owners>
        <projectUrl>https://github.com/hkrug/WiX.Toolset.NuGet</projectUrl>
        <licenseUrl>https://github.com/hkrug/WiX.Toolset.NuGet/blob/v3.10.2.2516/LICENSE.md</licenseUrl>
        <iconUrl>http://wixtoolset.org/Content/logo_framed.png</iconUrl>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <tags>WiX MSI Installer XML</tags>
        <releaseNotes>
		WiX v3.10.2 is an important security release of the WiX toolset. All users of WiX's Burn engine should upgrade to WiX v3.10.2 as soon as possible. 
    Special thanks to FireGiant (https://www.firegiant.com/) for rapidly and responsibly addressing the issue. They have more details on their blog (https://www.firegiant.com/blog/2016/1/20/wix-v3.10.2-released/).

    All supported versions of Windows (in addition to the unsupported Windows XP) suffer from a vulnerability known as DLL hijacking. 
    In DLL hijacking, malware delivered next to an executable (including Burn bundles) is loaded when a user runs the executable.
    
    This is especially problematic for installers, which are typically downloaded to a Downloads folder along with other downloaded files. 
    A website that delivers malware can, depending on your browser and its settings, automatically download a DLL to your Downloads folder. 
    If the DLL is named the same as a system DLL that your bundle loads, Windows loads and executes the malware in the Downloads folder instead of the DLL in the Windows system folder.

    Burn bundles do not request elevation when they're launched, so the malware does not get elevated privileges. 
    (Note that this is a default: Some developers have replaced the Burn manifest with one that requests elevation at launch. 
    In that case, malware loaded through DLL hijacking would get elevated privileges.) 
    However, even with just the user's privileges and network permissions, malware can do plenty of damage.

    Note that MSI packages and patches are not affected by this Windows vulnerability. 
    They are executed by the Windows Installer service which lives in the Windows system folder and therefore isn't vulnerable to DLL hijacking like downloaded executables.
    (s.a https://www.firegiant.com/blog/2016/1/20/wix-v3.10.2-released/)
        </releaseNotes>
    </metadata>
</package>